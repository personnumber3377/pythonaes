[[43, 126, 21, 22], [40, 174, 210, 166], [171, 247, 21, 136], [9, 207, 79, 60]]
[[160, 250, 254, 23], [136, 84, 44, 177], [35, 163, 57, 57], [42, 108, 118, 5]]
[[242, 194, 149, 242], [122, 150, 185, 67], [89, 53, 128, 122], [115, 89, 246, 127]]
[[61, 128, 71, 125], [71, 22, 254, 62], [30, 35, 126, 68], [109, 122, 136, 59]]
[[239, 68, 165, 65], [168, 82, 91, 127], [182, 113, 37, 59], [219, 11, 173, 0]]
[[212, 209, 198, 248], [124, 131, 157, 135], [202, 242, 184, 188], [17, 249, 21, 188]]
[[109, 136, 163, 122], [17, 11, 62, 253], [219, 249, 134, 65], [202, 0, 147, 253]]
[[78, 84, 247, 14], [95, 95, 201, 243], [132, 166, 79, 178], [78, 166, 220, 79]]
[[234, 210, 115, 33], [181, 141, 186, 210], [49, 43, 245, 96], [127, 141, 41, 47]]
[[172, 119, 102, 243], [25, 250, 220, 33], [40, 209, 41, 65], [87, 92, 0, 110]]
[[208, 20, 249, 168], [201, 238, 37, 137], [225, 63, 12, 200], [182, 99, 12, 166]]
length of flattened_list : 176
Here is the flattened list: [43, 40, 171, 9, 126, 174, 247, 207, 21, 210, 21, 79, 22, 166, 136, 60, 160, 136, 35, 42, 250, 84, 163, 108, 254, 44, 57, 118, 23, 177, 57, 5, 242, 122, 89, 115, 194, 150, 53, 89, 149, 185, 128, 246, 242, 67, 122, 127, 61, 71, 30, 109, 128, 22, 35, 122, 71, 254, 126, 136, 125, 62, 68, 59, 239, 168, 182, 219, 68, 82, 113, 11, 165, 91, 37, 173, 65, 127, 59, 0, 212, 124, 202, 17, 209, 131, 242, 249, 198, 157, 184, 21, 248, 135, 188, 188, 109, 17, 219, 202, 136, 11, 249, 0, 163, 62, 134, 147, 122, 253, 65, 253, 78, 95, 132, 78, 84, 95, 166, 166, 247, 201, 79, 220, 14, 243, 178, 79, 234, 181, 49, 127, 210, 141, 43, 141, 115, 186, 245, 41, 33, 210, 96, 47, 172, 25, 40, 87, 119, 250, 209, 92, 102, 220, 41, 0, 243, 33, 65, 110, 208, 201, 225, 182, 20, 238, 63, 99, 249, 37, 12, 12, 168, 137, 200, 166]
flattened_list[0] == 43
Here is the test output.
length of flattened_list : 16
Here is the flattened list: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
flattened_list[0] == 0
000102030405060708090a0b0c0d0e0f
input_mat[1] == [4, 5, 6, 7]
after: [5, 6, 7, 4]
Passed test_shift!
[[111, 111, 102, 111], [111, 102, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
[[13, 12, 5, 12], [98, 106, 5, 12], [98, 106, 5, 12], [98, 106, 5, 12]]
[[13, 103, 251, 166], [111, 13, 254, 170], [13, 103, 251, 166], [111, 13, 254, 170]]
[[222, 220, 87, 14], [177, 209, 169, 164], [188, 182, 82, 2], [211, 187, 172, 168]]
[[60, 77, 149, 104], [141, 156, 60, 204], [49, 42, 110, 206], [226, 145, 194, 102]]
[[173, 104, 166, 240], [32, 244, 154, 60], [17, 222, 244, 242], [243, 79, 54, 148]]
[[9, 109, 132, 253], [41, 153, 30, 193], [56, 71, 234, 51], [203, 8, 220, 167]]
[[121, 235, 216, 226], [80, 114, 198, 35], [104, 53, 44, 16], [163, 61, 240, 183]]
[[222, 103, 113, 232], [142, 21, 183, 203], [230, 32, 155, 219], [69, 29, 107, 108]]
[[97, 24, 33, 134], [239, 13, 150, 77], [9, 45, 13, 150], [76, 48, 102, 250]]
[[83, 43, 12, 175], [188, 38, 154, 226], [181, 11, 151, 116], [249, 59, 241, 142]]
Here is the key: b'\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f'
[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15]]
[[214, 170, 116, 253], [210, 175, 114, 250], [218, 166, 120, 241], [214, 171, 118, 254]]
[[182, 146, 207, 11], [100, 61, 189, 241], [190, 155, 197, 0], [104, 48, 179, 254]]
[[182, 255, 116, 78], [210, 194, 201, 191], [108, 89, 12, 191], [4, 105, 191, 65]]
[[71, 247, 247, 188], [149, 53, 62, 3], [249, 108, 50, 188], [253, 5, 141, 253]]
[[60, 170, 163, 232], [169, 159, 157, 235], [80, 243, 175, 87], [173, 246, 34, 170]]
[[94, 57, 15, 125], [247, 166, 146, 150], [167, 85, 61, 193], [10, 163, 31, 107]]
[[20, 249, 112, 26], [227, 95, 226, 140], [68, 10, 223, 77], [78, 169, 192, 38]]
[[71, 67, 135, 53], [164, 28, 101, 185], [224, 22, 186, 244], [174, 191, 122, 210]]
[[84, 153, 50, 209], [240, 133, 87, 104], [16, 147, 237, 156], [190, 44, 151, 78]]
[[19, 17, 29, 127], [227, 148, 74, 23], [243, 7, 167, 139], [77, 43, 48, 197]]
Here is the expanded key: [[[0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15]], [[214, 210, 218, 214], [170, 175, 166, 171], [116, 114, 120, 118], [253, 250, 241, 254]], [[182, 100, 190, 104], [146, 61, 155, 48], [207, 189, 197, 179], [11, 241, 0, 254]], [[182, 210, 108, 4], [255, 194, 89, 105], [116, 201, 12, 191], [78, 191, 191, 65]], [[71, 149, 249, 253], [247, 53, 108, 5], [247, 62, 50, 141], [188, 3, 188, 253]], [[60, 169, 80, 173], [170, 159, 243, 246], [163, 157, 175, 34], [232, 235, 87, 170]], [[94, 247, 167, 10], [57, 166, 85, 163], [15, 146, 61, 31], [125, 150, 193, 107]], [[20, 227, 68, 78], [249, 95, 10, 169], [112, 226, 223, 192], [26, 140, 77, 38]], [[71, 164, 224, 174], [67, 28, 22, 191], [135, 101, 186, 122], [53, 185, 244, 210]], [[84, 240, 16, 190], [153, 133, 147, 44], [50, 87, 237, 151], [209, 104, 156, 78]], [[19, 227, 243, 77], [17, 148, 7, 43], [29, 74, 167, 48], [127, 23, 139, 197]]]
Here is the length of the key: 11
length of flattened_list : 16
Here is the flattened list: [0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255]
flattened_list[0] == 0
round[0].input : 00112233445566778899aabbccddeeff
subkey == [[0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15]]
input_mat == [[0, 68, 136, 204], [17, 85, 153, 221], [34, 102, 170, 238], [51, 119, 187, 255]]
subkey == [[0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15]]
length of flattened_list : 176
Here is the flattened list: [0, 4, 8, 12, 1, 5, 9, 13, 2, 6, 10, 14, 3, 7, 11, 15, 214, 210, 218, 214, 170, 175, 166, 171, 116, 114, 120, 118, 253, 250, 241, 254, 182, 100, 190, 104, 146, 61, 155, 48, 207, 189, 197, 179, 11, 241, 0, 254, 182, 210, 108, 4, 255, 194, 89, 105, 116, 201, 12, 191, 78, 191, 191, 65, 71, 149, 249, 253, 247, 53, 108, 5, 247, 62, 50, 141, 188, 3, 188, 253, 60, 169, 80, 173, 170, 159, 243, 246, 163, 157, 175, 34, 232, 235, 87, 170, 94, 247, 167, 10, 57, 166, 85, 163, 15, 146, 61, 31, 125, 150, 193, 107, 20, 227, 68, 78, 249, 95, 10, 169, 112, 226, 223, 192, 26, 140, 77, 38, 71, 164, 224, 174, 67, 28, 22, 191, 135, 101, 186, 122, 53, 185, 244, 210, 84, 240, 16, 190, 153, 133, 147, 44, 50, 87, 237, 151, 209, 104, 156, 78, 19, 227, 243, 77, 17, 148, 7, 43, 29, 74, 167, 48, 127, 23, 139, 197]
flattened_list[0] == 0
round[0].k_sch : 0004080c0105090d02060a0e03070b0fd6d2dad6aaafa6ab74727876fdfaf1feb664be68923d9b30cfbdc5b30bf100feb6d26c04ffc2596974c90cbf4ebfbf414795f9fdf7356c05f73e328dbc03bcfd3ca950adaa9ff3f6a39daf22e8eb57aa5ef7a70a39a655a30f923d1f7d96c16b14e3444ef95f0aa970e2dfc01a8c4d2647a4e0ae431c16bf8765ba7a35b9f4d254f010be9985932c3257ed97d1689c4e13e3f34d1194072b1d4aa7307f178bc5
length of flattened_list : 16
Here is the flattened list: [0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240]
flattened_list[0] == 0
round[1].start == 00102030405060708090a0b0c0d0e0f0
length of flattened_list : 16
Here is the flattened list: [99, 202, 183, 4, 9, 83, 208, 81, 205, 96, 224, 231, 186, 112, 225, 140]
flattened_list[0] == 99
round[1].s_box == 63cab7040953d051cd60e0e7ba70e18c
input_mat[1] == [202, 83, 96, 112]
after: [83, 96, 112, 202]
length of flattened_list : 16
Here is the flattened list: [99, 83, 224, 140, 9, 96, 225, 4, 205, 112, 183, 81, 186, 202, 208, 231]
flattened_list[0] == 99
round[1].s_row == 6353e08c0960e104cd70b751bacad0e7
input_matrix to MixColumns == [[99, 9, 205, 186], [83, 96, 112, 202], [224, 225, 183, 208], [140, 4, 81, 231]]
Here is the cur_column: [99, 83, 224, 140]
r original: [99, 83, 224, 140]
b[c] == 198
h * 0x1B + 0x100 == 0x100
b[c] final == 198
b[c] == 166
h * 0x1B + 0x100 == 0x100
b[c] final == 166
b[c] == 448
h * 0x1B + 0x100 == 0x11b
b[c] final == 219
b[c] == 280
h * 0x1B + 0x100 == 0x11b
b[c] final == 3
r == [95, 114, 100, 21]
Here is the cur_column: [9, 96, 225, 4]
r original: [9, 96, 225, 4]
b[c] == 18
h * 0x1B + 0x100 == 0x100
b[c] final == 18
b[c] == 192
h * 0x1B + 0x100 == 0x100
b[c] final == 192
b[c] == 450
h * 0x1B + 0x100 == 0x11b
b[c] final == 217
b[c] == 8
h * 0x1B + 0x100 == 0x100
b[c] final == 8
r == [87, 245, 188, 146]
Here is the cur_column: [205, 112, 183, 81]
r original: [205, 112, 183, 81]
b[c] == 410
h * 0x1B + 0x100 == 0x11b
b[c] final == 129
b[c] == 224
h * 0x1B + 0x100 == 0x100
b[c] final == 224
b[c] == 366
h * 0x1B + 0x100 == 0x11b
b[c] final == 117
b[c] == 162
h * 0x1B + 0x100 == 0x100
b[c] final == 162
r == [247, 190, 59, 41]
Here is the cur_column: [186, 202, 208, 231]
r original: [186, 202, 208, 231]
b[c] == 372
h * 0x1B + 0x100 == 0x11b
b[c] final == 111
b[c] == 404
h * 0x1B + 0x100 == 0x11b
b[c] final == 143
b[c] == 416
h * 0x1B + 0x100 == 0x11b
b[c] final == 187
b[c] == 462
h * 0x1B + 0x100 == 0x11b
b[c] final == 213
r == [29, 185, 249, 26]
Outputting this from MixColumns: [[95, 87, 247, 29], [114, 245, 190, 185], [100, 188, 59, 249], [21, 146, 41, 26]]
length of flattened_list : 16
Here is the flattened list: [95, 114, 100, 21, 87, 245, 188, 146, 247, 190, 59, 41, 29, 185, 249, 26]
flattened_list[0] == 95
round[1].m_col == 5f72641557f5bc92f7be3b291db9f91a
subkey == [[214, 210, 218, 214], [170, 175, 166, 171], [116, 114, 120, 118], [253, 250, 241, 254]]
input_mat == [[95, 87, 247, 29], [114, 245, 190, 185], [100, 188, 59, 249], [21, 146, 41, 26]]
subkey == [[214, 210, 218, 214], [170, 175, 166, 171], [116, 114, 120, 118], [253, 250, 241, 254]]
length of flattened_list : 16
Here is the flattened list: [137, 216, 16, 232, 133, 90, 206, 104, 45, 24, 67, 216, 203, 18, 143, 228]
flattened_list[0] == 137
round[1].k_sch == 89d810e8855ace682d1843d8cb128fe4
length of flattened_list : 16
Here is the flattened list: [137, 216, 16, 232, 133, 90, 206, 104, 45, 24, 67, 216, 203, 18, 143, 228]
flattened_list[0] == 137
round[2].start == 89d810e8855ace682d1843d8cb128fe4
length of flattened_list : 16
Here is the flattened list: [167, 97, 202, 155, 151, 190, 139, 69, 216, 173, 26, 97, 31, 201, 115, 105]
flattened_list[0] == 167
round[2].s_box == a761ca9b97be8b45d8ad1a611fc97369
input_mat[1] == [97, 190, 173, 201]
after: [190, 173, 201, 97]
length of flattened_list : 16
Here is the flattened list: [167, 190, 26, 105, 151, 173, 115, 155, 216, 201, 202, 69, 31, 97, 139, 97]
flattened_list[0] == 167
round[2].s_row == a7be1a6997ad739bd8c9ca451f618b61
input_matrix to MixColumns == [[167, 151, 216, 31], [190, 173, 201, 97], [26, 115, 202, 139], [105, 155, 69, 97]]
Here is the cur_column: [167, 190, 26, 105]
r original: [167, 190, 26, 105]
b[c] == 334
h * 0x1B + 0x100 == 0x11b
b[c] final == 85
b[c] == 380
h * 0x1B + 0x100 == 0x11b
b[c] final == 103
b[c] == 52
h * 0x1B + 0x100 == 0x100
b[c] final == 52
b[c] == 210
h * 0x1B + 0x100 == 0x100
b[c] final == 210
r == [255, 135, 150, 132]
Here is the cur_column: [151, 173, 115, 155]
r original: [151, 173, 115, 155]
b[c] == 302
h * 0x1B + 0x100 == 0x11b
b[c] final == 53
b[c] == 346
h * 0x1B + 0x100 == 0x11b
b[c] final == 65
b[c] == 230
h * 0x1B + 0x100 == 0x100
b[c] final == 230
b[c] == 310
h * 0x1B + 0x100 == 0x11b
b[c] final == 45
r == [49, 216, 106, 81]
Here is the cur_column: [216, 201, 202, 69]
r original: [216, 201, 202, 69]
b[c] == 432
h * 0x1B + 0x100 == 0x11b
b[c] final == 171
b[c] == 402
h * 0x1B + 0x100 == 0x11b
b[c] final == 137
b[c] == 404
h * 0x1B + 0x100 == 0x11b
b[c] final == 143
b[c] == 138
h * 0x1B + 0x100 == 0x100
b[c] final == 138
r == [100, 81, 81, 250]
Here is the cur_column: [31, 97, 139, 97]
r original: [31, 97, 139, 97]
b[c] == 62
h * 0x1B + 0x100 == 0x100
b[c] final == 62
b[c] == 194
h * 0x1B + 0x100 == 0x100
b[c] final == 194
b[c] == 278
h * 0x1B + 0x100 == 0x11b
b[c] final == 13
b[c] == 194
h * 0x1B + 0x100 == 0x100
b[c] final == 194
r == [119, 58, 208, 9]
Outputting this from MixColumns: [[255, 49, 100, 119], [135, 216, 81, 58], [150, 106, 81, 208], [132, 81, 250, 9]]
length of flattened_list : 16
Here is the flattened list: [255, 135, 150, 132, 49, 216, 106, 81, 100, 81, 81, 250, 119, 58, 208, 9]
flattened_list[0] == 255
round[2].m_col == ff87968431d86a51645151fa773ad009
subkey == [[182, 100, 190, 104], [146, 61, 155, 48], [207, 189, 197, 179], [11, 241, 0, 254]]
input_mat == [[255, 49, 100, 119], [135, 216, 81, 58], [150, 106, 81, 208], [132, 81, 250, 9]]
subkey == [[182, 100, 190, 104], [146, 61, 155, 48], [207, 189, 197, 179], [11, 241, 0, 254]]
length of flattened_list : 16
Here is the flattened list: [73, 21, 89, 143, 85, 229, 215, 160, 218, 202, 148, 250, 31, 10, 99, 247]
flattened_list[0] == 73
round[2].k_sch == 4915598f55e5d7a0daca94fa1f0a63f7
length of flattened_list : 16
Here is the flattened list: [73, 21, 89, 143, 85, 229, 215, 160, 218, 202, 148, 250, 31, 10, 99, 247]
flattened_list[0] == 73
round[3].start == 4915598f55e5d7a0daca94fa1f0a63f7
length of flattened_list : 16
Here is the flattened list: [59, 89, 203, 115, 252, 217, 14, 224, 87, 116, 34, 45, 192, 103, 251, 104]
flattened_list[0] == 59
round[3].s_box == 3b59cb73fcd90ee05774222dc067fb68
input_mat[1] == [89, 217, 116, 103]
after: [217, 116, 103, 89]
length of flattened_list : 16
Here is the flattened list: [59, 217, 34, 104, 252, 116, 251, 115, 87, 103, 203, 224, 192, 89, 14, 45]
flattened_list[0] == 59
round[3].s_row == 3bd92268fc74fb735767cbe0c0590e2d
input_matrix to MixColumns == [[59, 252, 87, 192], [217, 116, 103, 89], [34, 251, 203, 14], [104, 115, 224, 45]]
Here is the cur_column: [59, 217, 34, 104]
r original: [59, 217, 34, 104]
b[c] == 118
h * 0x1B + 0x100 == 0x100
b[c] final == 118
b[c] == 434
h * 0x1B + 0x100 == 0x11b
b[c] final == 169
b[c] == 68
h * 0x1B + 0x100 == 0x100
b[c] final == 68
b[c] == 208
h * 0x1B + 0x100 == 0x100
b[c] final == 208
r == [76, 156, 30, 102]
Here is the cur_column: [252, 116, 251, 115]
r original: [252, 116, 251, 115]
b[c] == 504
h * 0x1B + 0x100 == 0x11b
b[c] final == 227
b[c] == 232
h * 0x1B + 0x100 == 0x100
b[c] final == 232
b[c] == 502
h * 0x1B + 0x100 == 0x11b
b[c] final == 237
b[c] == 230
h * 0x1B + 0x100 == 0x100
b[c] final == 230
r == [247, 113, 240, 118]
Here is the cur_column: [87, 103, 203, 224]
r original: [87, 103, 203, 224]
b[c] == 174
h * 0x1B + 0x100 == 0x100
b[c] final == 174
b[c] == 206
h * 0x1B + 0x100 == 0x100
b[c] final == 206
b[c] == 406
h * 0x1B + 0x100 == 0x11b
b[c] final == 141
b[c] == 448
h * 0x1B + 0x100 == 0x11b
b[c] final == 219
r == [44, 63, 134, 142]
Here is the cur_column: [192, 89, 14, 45]
r original: [192, 89, 14, 45]
b[c] == 384
h * 0x1B + 0x100 == 0x11b
b[c] final == 155
b[c] == 178
h * 0x1B + 0x100 == 0x100
b[c] final == 178
b[c] == 28
h * 0x1B + 0x100 == 0x100
b[c] final == 28
b[c] == 90
h * 0x1B + 0x100 == 0x100
b[c] final == 90
r == [83, 77, 242, 86]
Outputting this from MixColumns: [[76, 247, 44, 83], [156, 113, 63, 77], [30, 240, 134, 242], [102, 118, 142, 86]]
length of flattened_list : 16
Here is the flattened list: [76, 156, 30, 102, 247, 113, 240, 118, 44, 63, 134, 142, 83, 77, 242, 86]
flattened_list[0] == 76
round[3].m_col == 4c9c1e66f771f0762c3f868e534df256
subkey == [[182, 210, 108, 4], [255, 194, 89, 105], [116, 201, 12, 191], [78, 191, 191, 65]]
input_mat == [[76, 247, 44, 83], [156, 113, 63, 77], [30, 240, 134, 242], [102, 118, 142, 86]]
subkey == [[182, 210, 108, 4], [255, 194, 89, 105], [116, 201, 12, 191], [78, 191, 191, 65]]
length of flattened_list : 16
Here is the flattened list: [250, 99, 106, 40, 37, 179, 57, 201, 64, 102, 138, 49, 87, 36, 77, 23]
flattened_list[0] == 250
round[3].k_sch == fa636a2825b339c940668a3157244d17
length of flattened_list : 16
Here is the flattened list: [250, 99, 106, 40, 37, 179, 57, 201, 64, 102, 138, 49, 87, 36, 77, 23]
flattened_list[0] == 250
round[4].start == fa636a2825b339c940668a3157244d17
length of flattened_list : 16
Here is the flattened list: [45, 251, 2, 52, 63, 109, 18, 221, 9, 51, 126, 199, 91, 54, 227, 240]
flattened_list[0] == 45
round[4].s_box == 2dfb02343f6d12dd09337ec75b36e3f0
input_mat[1] == [251, 109, 51, 54]
after: [109, 51, 54, 251]
length of flattened_list : 16
Here is the flattened list: [45, 109, 126, 240, 63, 51, 227, 52, 9, 54, 2, 221, 91, 251, 18, 199]
flattened_list[0] == 45
round[4].s_row == 2d6d7ef03f33e334093602dd5bfb12c7
input_matrix to MixColumns == [[45, 63, 9, 91], [109, 51, 54, 251], [126, 227, 2, 18], [240, 52, 221, 199]]
Here is the cur_column: [45, 109, 126, 240]
r original: [45, 109, 126, 240]
b[c] == 90
h * 0x1B + 0x100 == 0x100
b[c] final == 90
b[c] == 218
h * 0x1B + 0x100 == 0x100
b[c] final == 218
b[c] == 252
h * 0x1B + 0x100 == 0x100
b[c] final == 252
b[c] == 480
h * 0x1B + 0x100 == 0x11b
b[c] final == 251
r == [99, 133, 183, 159]
Here is the cur_column: [63, 51, 227, 52]
r original: [63, 51, 227, 52]
b[c] == 126
h * 0x1B + 0x100 == 0x100
b[c] final == 126
b[c] == 102
h * 0x1B + 0x100 == 0x100
b[c] final == 102
b[c] == 454
h * 0x1B + 0x100 == 0x11b
b[c] final == 221
b[c] == 104
h * 0x1B + 0x100 == 0x100
b[c] final == 104
r == [252, 83, 141, 249]
Here is the cur_column: [9, 54, 2, 221]
r original: [9, 54, 2, 221]
b[c] == 18
h * 0x1B + 0x100 == 0x100
b[c] final == 18
b[c] == 108
h * 0x1B + 0x100 == 0x100
b[c] final == 108
b[c] == 4
h * 0x1B + 0x100 == 0x100
b[c] final == 4
b[c] == 442
h * 0x1B + 0x100 == 0x11b
b[c] final == 161
r == [151, 190, 71, 142]
Here is the cur_column: [91, 251, 18, 199]
r original: [91, 251, 18, 199]
b[c] == 182
h * 0x1B + 0x100 == 0x100
b[c] final == 182
b[c] == 502
h * 0x1B + 0x100 == 0x11b
b[c] final == 237
b[c] == 36
h * 0x1B + 0x100 == 0x100
b[c] final == 36
b[c] == 398
h * 0x1B + 0x100 == 0x11b
b[c] final == 149
r == [117, 71, 214, 145]
Outputting this from MixColumns: [[99, 252, 151, 117], [133, 83, 190, 71], [183, 141, 71, 214], [159, 249, 142, 145]]
length of flattened_list : 16
Here is the flattened list: [99, 133, 183, 159, 252, 83, 141, 249, 151, 190, 71, 142, 117, 71, 214, 145]
flattened_list[0] == 99
round[4].m_col == 6385b79ffc538df997be478e7547d691
subkey == [[71, 149, 249, 253], [247, 53, 108, 5], [247, 62, 50, 141], [188, 3, 188, 253]]
input_mat == [[99, 252, 151, 117], [133, 83, 190, 71], [183, 141, 71, 214], [159, 249, 142, 145]]
subkey == [[71, 149, 249, 253], [247, 53, 108, 5], [247, 62, 50, 141], [188, 3, 188, 253]]
length of flattened_list : 16
Here is the flattened list: [36, 114, 64, 35, 105, 102, 179, 250, 110, 210, 117, 50, 136, 66, 91, 108]
flattened_list[0] == 36
round[4].k_sch == 247240236966b3fa6ed2753288425b6c
length of flattened_list : 16
Here is the flattened list: [36, 114, 64, 35, 105, 102, 179, 250, 110, 210, 117, 50, 136, 66, 91, 108]
flattened_list[0] == 36
round[5].start == 247240236966b3fa6ed2753288425b6c
length of flattened_list : 16
Here is the flattened list: [54, 64, 9, 38, 249, 51, 109, 45, 159, 181, 157, 35, 196, 44, 57, 80]
flattened_list[0] == 54
round[5].s_box == 36400926f9336d2d9fb59d23c42c3950
input_mat[1] == [64, 51, 181, 44]
after: [51, 181, 44, 64]
length of flattened_list : 16
Here is the flattened list: [54, 51, 157, 80, 249, 181, 57, 38, 159, 44, 9, 45, 196, 64, 109, 35]
flattened_list[0] == 54
round[5].s_row == 36339d50f9b539269f2c092dc4406d23
input_matrix to MixColumns == [[54, 249, 159, 196], [51, 181, 44, 64], [157, 57, 9, 109], [80, 38, 45, 35]]
Here is the cur_column: [54, 51, 157, 80]
r original: [54, 51, 157, 80]
b[c] == 108
h * 0x1B + 0x100 == 0x100
b[c] final == 108
b[c] == 102
h * 0x1B + 0x100 == 0x100
b[c] final == 102
b[c] == 314
h * 0x1B + 0x100 == 0x11b
b[c] final == 33
b[c] == 160
h * 0x1B + 0x100 == 0x100
b[c] final == 160
r == [244, 188, 212, 84]
Here is the cur_column: [249, 181, 57, 38]
r original: [249, 181, 57, 38]
b[c] == 498
h * 0x1B + 0x100 == 0x11b
b[c] final == 233
b[c] == 362
h * 0x1B + 0x100 == 0x11b
b[c] final == 113
b[c] == 114
h * 0x1B + 0x100 == 0x100
b[c] final == 114
b[c] == 76
h * 0x1B + 0x100 == 0x100
b[c] final == 76
r == [50, 229, 84, 208]
Here is the cur_column: [159, 44, 9, 45]
r original: [159, 44, 9, 45]
b[c] == 318
h * 0x1B + 0x100 == 0x11b
b[c] final == 37
b[c] == 88
h * 0x1B + 0x100 == 0x100
b[c] final == 88
b[c] == 18
h * 0x1B + 0x100 == 0x100
b[c] final == 18
b[c] == 90
h * 0x1B + 0x100 == 0x100
b[c] final == 90
r == [117, 241, 214, 197]
Here is the cur_column: [196, 64, 109, 35]
r original: [196, 64, 109, 35]
b[c] == 392
h * 0x1B + 0x100 == 0x11b
b[c] final == 147
b[c] == 128
h * 0x1B + 0x100 == 0x100
b[c] final == 128
b[c] == 218
h * 0x1B + 0x100 == 0x100
b[c] final == 218
b[c] == 70
h * 0x1B + 0x100 == 0x100
b[c] final == 70
r == [29, 208, 59, 60]
Outputting this from MixColumns: [[244, 50, 117, 29], [188, 229, 241, 208], [212, 84, 214, 59], [84, 208, 197, 60]]
length of flattened_list : 16
Here is the flattened list: [244, 188, 212, 84, 50, 229, 84, 208, 117, 241, 214, 197, 29, 208, 59, 60]
flattened_list[0] == 244
round[5].m_col == f4bcd45432e554d075f1d6c51dd03b3c
subkey == [[60, 169, 80, 173], [170, 159, 243, 246], [163, 157, 175, 34], [232, 235, 87, 170]]
input_mat == [[244, 50, 117, 29], [188, 229, 241, 208], [212, 84, 214, 59], [84, 208, 197, 60]]
subkey == [[60, 169, 80, 173], [170, 159, 243, 246], [163, 157, 175, 34], [232, 235, 87, 170]]
length of flattened_list : 16
Here is the flattened list: [200, 22, 119, 188, 155, 122, 201, 59, 37, 2, 121, 146, 176, 38, 25, 150]
flattened_list[0] == 200
round[5].k_sch == c81677bc9b7ac93b25027992b0261996
length of flattened_list : 16
Here is the flattened list: [200, 22, 119, 188, 155, 122, 201, 59, 37, 2, 121, 146, 176, 38, 25, 150]
flattened_list[0] == 200
round[6].start == c81677bc9b7ac93b25027992b0261996
length of flattened_list : 16
Here is the flattened list: [232, 71, 245, 101, 20, 218, 221, 226, 63, 119, 182, 79, 231, 247, 212, 144]
flattened_list[0] == 232
round[6].s_box == e847f56514dadde23f77b64fe7f7d490
input_mat[1] == [71, 218, 119, 247]
after: [218, 119, 247, 71]
length of flattened_list : 16
Here is the flattened list: [232, 218, 182, 144, 20, 119, 212, 101, 63, 247, 245, 226, 231, 71, 221, 79]
flattened_list[0] == 232
round[6].s_row == e8dab6901477d4653ff7f5e2e747dd4f
input_matrix to MixColumns == [[232, 20, 63, 231], [218, 119, 247, 71], [182, 212, 245, 221], [144, 101, 226, 79]]
Here is the cur_column: [232, 218, 182, 144]
r original: [232, 218, 182, 144]
b[c] == 464
h * 0x1B + 0x100 == 0x11b
b[c] final == 203
b[c] == 436
h * 0x1B + 0x100 == 0x11b
b[c] final == 175
b[c] == 364
h * 0x1B + 0x100 == 0x11b
b[c] final == 119
b[c] == 288
h * 0x1B + 0x100 == 0x11b
b[c] final == 59
r == [152, 22, 238, 116]
Here is the cur_column: [20, 119, 212, 101]
r original: [20, 119, 212, 101]
b[c] == 40
h * 0x1B + 0x100 == 0x100
b[c] final == 40
b[c] == 238
h * 0x1B + 0x100 == 0x100
b[c] final == 238
b[c] == 424
h * 0x1B + 0x100 == 0x11b
b[c] final == 179
b[c] == 202
h * 0x1B + 0x100 == 0x100
b[c] final == 202
r == [0, 248, 127, 85]
Here is the cur_column: [63, 247, 245, 226]
r original: [63, 247, 245, 226]
b[c] == 126
h * 0x1B + 0x100 == 0x100
b[c] final == 126
b[c] == 494
h * 0x1B + 0x100 == 0x11b
b[c] final == 245
b[c] == 490
h * 0x1B + 0x100 == 0x11b
b[c] final == 241
b[c] == 452
h * 0x1B + 0x100 == 0x11b
b[c] final == 223
r == [107, 44, 4, 156]
Here is the cur_column: [231, 71, 221, 79]
r original: [231, 71, 221, 79]
b[c] == 462
h * 0x1B + 0x100 == 0x11b
b[c] final == 213
b[c] == 142
h * 0x1B + 0x100 == 0x100
b[c] final == 142
b[c] == 442
h * 0x1B + 0x100 == 0x11b
b[c] final == 161
b[c] == 158
h * 0x1B + 0x100 == 0x100
b[c] final == 158
r == [142, 90, 208, 54]
Outputting this from MixColumns: [[152, 0, 107, 142], [22, 248, 44, 90], [238, 127, 4, 208], [116, 85, 156, 54]]
length of flattened_list : 16
Here is the flattened list: [152, 22, 238, 116, 0, 248, 127, 85, 107, 44, 4, 156, 142, 90, 208, 54]
flattened_list[0] == 152
round[6].m_col == 9816ee7400f87f556b2c049c8e5ad036
subkey == [[94, 247, 167, 10], [57, 166, 85, 163], [15, 146, 61, 31], [125, 150, 193, 107]]
input_mat == [[152, 0, 107, 142], [22, 248, 44, 90], [238, 127, 4, 208], [116, 85, 156, 54]]
subkey == [[94, 247, 167, 10], [57, 166, 85, 163], [15, 146, 61, 31], [125, 150, 193, 107]]
length of flattened_list : 16
Here is the flattened list: [198, 47, 225, 9, 247, 94, 237, 195, 204, 121, 57, 93, 132, 249, 207, 93]
flattened_list[0] == 198
round[6].k_sch == c62fe109f75eedc3cc79395d84f9cf5d
length of flattened_list : 16
Here is the flattened list: [198, 47, 225, 9, 247, 94, 237, 195, 204, 121, 57, 93, 132, 249, 207, 93]
flattened_list[0] == 198
round[7].start == c62fe109f75eedc3cc79395d84f9cf5d
length of flattened_list : 16
Here is the flattened list: [180, 21, 248, 1, 104, 88, 85, 46, 75, 182, 18, 76, 95, 153, 138, 76]
flattened_list[0] == 180
round[7].s_box == b415f8016858552e4bb6124c5f998a4c
input_mat[1] == [21, 88, 182, 153]
after: [88, 182, 153, 21]
length of flattened_list : 16
Here is the flattened list: [180, 88, 18, 76, 104, 182, 138, 1, 75, 153, 248, 46, 95, 21, 85, 76]
flattened_list[0] == 180
round[7].s_row == b458124c68b68a014b99f82e5f15554c
input_matrix to MixColumns == [[180, 104, 75, 95], [88, 182, 153, 21], [18, 138, 248, 85], [76, 1, 46, 76]]
Here is the cur_column: [180, 88, 18, 76]
r original: [180, 88, 18, 76]
b[c] == 360
h * 0x1B + 0x100 == 0x11b
b[c] final == 115
b[c] == 176
h * 0x1B + 0x100 == 0x100
b[c] final == 176
b[c] == 36
h * 0x1B + 0x100 == 0x100
b[c] final == 36
b[c] == 152
h * 0x1B + 0x100 == 0x100
b[c] final == 152
r == [197, 126, 28, 21]
Here is the cur_column: [104, 182, 138, 1]
r original: [104, 182, 138, 1]
b[c] == 208
h * 0x1B + 0x100 == 0x100
b[c] final == 208
b[c] == 364
h * 0x1B + 0x100 == 0x11b
b[c] final == 119
b[c] == 276
h * 0x1B + 0x100 == 0x11b
b[c] final == 15
b[c] == 2
h * 0x1B + 0x100 == 0x100
b[c] final == 2
r == [154, 155, 210, 134]
Here is the cur_column: [75, 153, 248, 46]
r original: [75, 153, 248, 46]
b[c] == 150
h * 0x1B + 0x100 == 0x100
b[c] final == 150
b[c] == 306
h * 0x1B + 0x100 == 0x11b
b[c] final == 41
b[c] == 496
h * 0x1B + 0x100 == 0x11b
b[c] final == 235
b[c] == 92
h * 0x1B + 0x100 == 0x100
b[c] final == 92
r == [240, 95, 75, 224]
Here is the cur_column: [95, 21, 85, 76]
r original: [95, 21, 85, 76]
b[c] == 190
h * 0x1B + 0x100 == 0x100
b[c] final == 190
b[c] == 42
h * 0x1B + 0x100 == 0x100
b[c] final == 42
b[c] == 170
h * 0x1B + 0x100 == 0x100
b[c] final == 170
b[c] == 152
h * 0x1B + 0x100 == 0x100
b[c] final == 152
r == [152, 198, 52, 57]
Outputting this from MixColumns: [[197, 154, 240, 152], [126, 155, 95, 198], [28, 210, 75, 52], [21, 134, 224, 57]]
length of flattened_list : 16
Here is the flattened list: [197, 126, 28, 21, 154, 155, 210, 134, 240, 95, 75, 224, 152, 198, 52, 57]
flattened_list[0] == 197
round[7].m_col == c57e1c159a9bd286f05f4be098c63439
subkey == [[20, 227, 68, 78], [249, 95, 10, 169], [112, 226, 223, 192], [26, 140, 77, 38]]
input_mat == [[197, 154, 240, 152], [126, 155, 95, 198], [28, 210, 75, 52], [21, 134, 224, 57]]
subkey == [[20, 227, 68, 78], [249, 95, 10, 169], [112, 226, 223, 192], [26, 140, 77, 38]]
length of flattened_list : 16
Here is the flattened list: [209, 135, 108, 15, 121, 196, 48, 10, 180, 85, 148, 173, 214, 111, 244, 31]
flattened_list[0] == 209
round[7].k_sch == d1876c0f79c4300ab45594add66ff41f
length of flattened_list : 16
Here is the flattened list: [209, 135, 108, 15, 121, 196, 48, 10, 180, 85, 148, 173, 214, 111, 244, 31]
flattened_list[0] == 209
round[8].start == d1876c0f79c4300ab45594add66ff41f
length of flattened_list : 16
Here is the flattened list: [62, 23, 80, 118, 182, 28, 4, 103, 141, 252, 34, 149, 246, 168, 191, 192]
flattened_list[0] == 62
round[8].s_box == 3e175076b61c04678dfc2295f6a8bfc0
input_mat[1] == [23, 28, 252, 168]
after: [28, 252, 168, 23]
length of flattened_list : 16
Here is the flattened list: [62, 28, 34, 192, 182, 252, 191, 118, 141, 168, 80, 103, 246, 23, 4, 149]
flattened_list[0] == 62
round[8].s_row == 3e1c22c0b6fcbf768da85067f6170495
input_matrix to MixColumns == [[62, 182, 141, 246], [28, 252, 168, 23], [34, 191, 80, 4], [192, 118, 103, 149]]
Here is the cur_column: [62, 28, 34, 192]
r original: [62, 28, 34, 192]
b[c] == 124
h * 0x1B + 0x100 == 0x100
b[c] final == 124
b[c] == 56
h * 0x1B + 0x100 == 0x100
b[c] final == 56
b[c] == 68
h * 0x1B + 0x100 == 0x100
b[c] final == 68
b[c] == 384
h * 0x1B + 0x100 == 0x11b
b[c] final == 155
r == [186, 160, 61, 231]
Here is the cur_column: [182, 252, 191, 118]
r original: [182, 252, 191, 118]
b[c] == 364
h * 0x1B + 0x100 == 0x11b
b[c] final == 119
b[c] == 504
h * 0x1B + 0x100 == 0x11b
b[c] final == 227
b[c] == 382
h * 0x1B + 0x100 == 0x11b
b[c] final == 101
b[c] == 236
h * 0x1B + 0x100 == 0x100
b[c] final == 236
r == [161, 249, 181, 110]
Here is the cur_column: [141, 168, 80, 103]
r original: [141, 168, 80, 103]
b[c] == 282
h * 0x1B + 0x100 == 0x11b
b[c] final == 1
b[c] == 336
h * 0x1B + 0x100 == 0x11b
b[c] final == 75
b[c] == 160
h * 0x1B + 0x100 == 0x100
b[c] final == 160
b[c] == 206
h * 0x1B + 0x100 == 0x100
b[c] final == 206
r == [213, 81, 44, 186]
Here is the cur_column: [246, 23, 4, 149]
r original: [246, 23, 4, 149]
b[c] == 492
h * 0x1B + 0x100 == 0x11b
b[c] final == 247
b[c] == 46
h * 0x1B + 0x100 == 0x100
b[c] final == 46
b[c] == 8
h * 0x1B + 0x100 == 0x100
b[c] final == 8
b[c] == 298
h * 0x1B + 0x100 == 0x11b
b[c] final == 49
r == [95, 65, 77, 35]
Outputting this from MixColumns: [[186, 161, 213, 95], [160, 249, 81, 65], [61, 181, 44, 77], [231, 110, 186, 35]]
length of flattened_list : 16
Here is the flattened list: [186, 160, 61, 231, 161, 249, 181, 110, 213, 81, 44, 186, 95, 65, 77, 35]
flattened_list[0] == 186
round[8].m_col == baa03de7a1f9b56ed5512cba5f414d23
subkey == [[71, 164, 224, 174], [67, 28, 22, 191], [135, 101, 186, 122], [53, 185, 244, 210]]
input_mat == [[186, 161, 213, 95], [160, 249, 81, 65], [61, 181, 44, 77], [231, 110, 186, 35]]
subkey == [[71, 164, 224, 174], [67, 28, 22, 191], [135, 101, 186, 122], [53, 185, 244, 210]]
length of flattened_list : 16
Here is the flattened list: [253, 227, 186, 210, 5, 229, 208, 215, 53, 71, 150, 78, 241, 254, 55, 241]
flattened_list[0] == 253
round[8].k_sch == fde3bad205e5d0d73547964ef1fe37f1
length of flattened_list : 16
Here is the flattened list: [253, 227, 186, 210, 5, 229, 208, 215, 53, 71, 150, 78, 241, 254, 55, 241]
flattened_list[0] == 253
round[9].start == fde3bad205e5d0d73547964ef1fe37f1
length of flattened_list : 16
Here is the flattened list: [84, 17, 244, 181, 107, 217, 112, 14, 150, 160, 144, 47, 161, 187, 154, 161]
flattened_list[0] == 84
round[9].s_box == 5411f4b56bd9700e96a0902fa1bb9aa1
input_mat[1] == [17, 217, 160, 187]
after: [217, 160, 187, 17]
length of flattened_list : 16
Here is the flattened list: [84, 217, 144, 161, 107, 160, 154, 181, 150, 187, 244, 14, 161, 17, 112, 47]
flattened_list[0] == 84
round[9].s_row == 54d990a16ba09ab596bbf40ea111702f
input_matrix to MixColumns == [[84, 107, 150, 161], [217, 160, 187, 17], [144, 154, 244, 112], [161, 181, 14, 47]]
Here is the cur_column: [84, 217, 144, 161]
r original: [84, 217, 144, 161]
b[c] == 168
h * 0x1B + 0x100 == 0x100
b[c] final == 168
b[c] == 434
h * 0x1B + 0x100 == 0x11b
b[c] final == 169
b[c] == 288
h * 0x1B + 0x100 == 0x11b
b[c] final == 59
b[c] == 322
h * 0x1B + 0x100 == 0x11b
b[c] final == 89
r == [233, 247, 78, 236]
Here is the cur_column: [107, 160, 154, 181]
r original: [107, 160, 154, 181]
b[c] == 214
h * 0x1B + 0x100 == 0x100
b[c] final == 214
b[c] == 320
h * 0x1B + 0x100 == 0x11b
b[c] final == 91
b[c] == 308
h * 0x1B + 0x100 == 0x11b
b[c] final == 47
b[c] == 362
h * 0x1B + 0x100 == 0x11b
b[c] final == 113
r == [2, 48, 32, 246]
Here is the cur_column: [150, 187, 244, 14]
r original: [150, 187, 244, 14]
b[c] == 300
h * 0x1B + 0x100 == 0x11b
b[c] final == 55
b[c] == 374
h * 0x1B + 0x100 == 0x11b
b[c] final == 109
b[c] == 488
h * 0x1B + 0x100 == 0x11b
b[c] final == 243
b[c] == 28
h * 0x1B + 0x100 == 0x100
b[c] final == 28
r == [27, 242, 204, 242]
Here is the cur_column: [161, 17, 112, 47]
r original: [161, 17, 112, 47]
b[c] == 322
h * 0x1B + 0x100 == 0x11b
b[c] final == 89
b[c] == 34
h * 0x1B + 0x100 == 0x100
b[c] final == 34
b[c] == 224
h * 0x1B + 0x100 == 0x100
b[c] final == 224
b[c] == 94
h * 0x1B + 0x100 == 0x100
b[c] final == 94
r == [53, 60, 33, 199]
Outputting this from MixColumns: [[233, 2, 27, 53], [247, 48, 242, 60], [78, 32, 204, 33], [236, 246, 242, 199]]
length of flattened_list : 16
Here is the flattened list: [233, 247, 78, 236, 2, 48, 32, 246, 27, 242, 204, 242, 53, 60, 33, 199]
flattened_list[0] == 233
round[9].m_col == e9f74eec023020f61bf2ccf2353c21c7
subkey == [[84, 240, 16, 190], [153, 133, 147, 44], [50, 87, 237, 151], [209, 104, 156, 78]]
input_mat == [[233, 2, 27, 53], [247, 48, 242, 60], [78, 32, 204, 33], [236, 246, 242, 199]]
subkey == [[84, 240, 16, 190], [153, 133, 147, 44], [50, 87, 237, 151], [209, 104, 156, 78]]
length of flattened_list : 16
Here is the flattened list: [189, 110, 124, 61, 242, 181, 119, 158, 11, 97, 33, 110, 139, 16, 182, 137]
flattened_list[0] == 189
round[9].k_sch == bd6e7c3df2b5779e0b61216e8b10b689
length of flattened_list : 16
Here is the flattened list: [122, 159, 16, 39, 137, 213, 245, 11, 43, 239, 253, 159, 61, 202, 78, 167]
flattened_list[0] == 122
round[10].s_box == 7a9f102789d5f50b2beffd9f3dca4ea7
input_mat[1] == [159, 213, 239, 202]
after: [213, 239, 202, 159]
length of flattened_list : 16
Here is the flattened list: [122, 213, 253, 167, 137, 239, 78, 39, 43, 202, 16, 11, 61, 159, 245, 159]
flattened_list[0] == 122
round[10].s_row == 7ad5fda789ef4e272bca100b3d9ff59f
subkey == [[19, 227, 243, 77], [17, 148, 7, 43], [29, 74, 167, 48], [127, 23, 139, 197]]
input_mat == [[122, 137, 43, 61], [213, 239, 202, 159], [253, 78, 16, 245], [167, 39, 11, 159]]
subkey == [[19, 227, 243, 77], [17, 148, 7, 43], [29, 74, 167, 48], [127, 23, 139, 197]]
length of flattened_list : 16
Here is the flattened list: [105, 196, 224, 216, 106, 123, 4, 48, 216, 205, 183, 128, 112, 180, 197, 90]
flattened_list[0] == 105
round[10].k_sch == 69c4e0d86a7b0430d8cdb78070b4c55a
length of flattened_list : 16
Here is the flattened list: [105, 196, 224, 216, 106, 123, 4, 48, 216, 205, 183, 128, 112, 180, 197, 90]
flattened_list[0] == 105
Final state after encryption: 69c4e0d86a7b0430d8cdb78070b4c55a
length of flattened_list : 16
Here is the flattened list: [105, 196, 224, 216, 106, 123, 4, 48, 216, 205, 183, 128, 112, 180, 197, 90]
flattened_list[0] == 105
69c4e0d86a7b0430d8cdb78070b4c55a
Done!
